
STM32F4xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006c4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800086c  0800086c  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800086c  0800086c  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  0800086c  0800086c  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800086c  0800086c  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800086c  0800086c  0001086c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000870  08000870  00010870  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000874  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020004  2**0
                  CONTENTS
 10 .bss          0000001c  20000004  20000004  00020004  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020004  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009ea  00000000  00000000  0002002e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000296  00000000  00000000  00020a18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00020cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000080  00000000  00000000  00020d58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001520  00000000  00000000  00020dd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d94  00000000  00000000  000222f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000056a3  00000000  00000000  0002308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002872f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  00028780  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000004 	.word	0x20000004
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000854 	.word	0x08000854

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000008 	.word	0x20000008
 80001e4:	08000854 	.word	0x08000854

080001e8 <GPIO_PeriClockControl>:
  *
  * @note		-
  */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d153      	bne.n	80002a2 <GPIO_PeriClockControl+0xba>
	{
		if(pGPIOx == GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a55      	ldr	r2, [pc, #340]	; (8000354 <GPIO_PeriClockControl+0x16c>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000202:	4b55      	ldr	r3, [pc, #340]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a54      	ldr	r2, [pc, #336]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
		}else
		{
			GPIOH_PCLK_DI();
		}
	}
}
 800020e:	e09b      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a52      	ldr	r2, [pc, #328]	; (800035c <GPIO_PeriClockControl+0x174>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000218:	4b4f      	ldr	r3, [pc, #316]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a4e      	ldr	r2, [pc, #312]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e090      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a4d      	ldr	r2, [pc, #308]	; (8000360 <GPIO_PeriClockControl+0x178>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800022e:	4b4a      	ldr	r3, [pc, #296]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a49      	ldr	r2, [pc, #292]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e085      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a49      	ldr	r2, [pc, #292]	; (8000364 <GPIO_PeriClockControl+0x17c>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000244:	4b44      	ldr	r3, [pc, #272]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a43      	ldr	r2, [pc, #268]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e07a      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a44      	ldr	r2, [pc, #272]	; (8000368 <GPIO_PeriClockControl+0x180>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800025a:	4b3f      	ldr	r3, [pc, #252]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a3e      	ldr	r2, [pc, #248]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e06f      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a40      	ldr	r2, [pc, #256]	; (800036c <GPIO_PeriClockControl+0x184>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000270:	4b39      	ldr	r3, [pc, #228]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a38      	ldr	r2, [pc, #224]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e064      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a3b      	ldr	r2, [pc, #236]	; (8000370 <GPIO_PeriClockControl+0x188>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000286:	4b34      	ldr	r3, [pc, #208]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a33      	ldr	r2, [pc, #204]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e059      	b.n	8000348 <GPIO_PeriClockControl+0x160>
			GPIOH_PCLK_EN();
 8000294:	4b30      	ldr	r3, [pc, #192]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000296:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000298:	4a2f      	ldr	r2, [pc, #188]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800029a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800029e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a0:	e052      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		if(pGPIOx == GPIOA)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a2b      	ldr	r2, [pc, #172]	; (8000354 <GPIO_PeriClockControl+0x16c>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d106      	bne.n	80002b8 <GPIO_PeriClockControl+0xd0>
			GPIOA_PCLK_DI();
 80002aa:	4b2b      	ldr	r3, [pc, #172]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002ac:	691b      	ldr	r3, [r3, #16]
 80002ae:	4a2a      	ldr	r2, [pc, #168]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002b0:	f043 0301 	orr.w	r3, r3, #1
 80002b4:	6113      	str	r3, [r2, #16]
}
 80002b6:	e047      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOB)
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	4a28      	ldr	r2, [pc, #160]	; (800035c <GPIO_PeriClockControl+0x174>)
 80002bc:	4293      	cmp	r3, r2
 80002be:	d106      	bne.n	80002ce <GPIO_PeriClockControl+0xe6>
			GPIOB_PCLK_DI();
 80002c0:	4b25      	ldr	r3, [pc, #148]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002c2:	691b      	ldr	r3, [r3, #16]
 80002c4:	4a24      	ldr	r2, [pc, #144]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002c6:	f043 0302 	orr.w	r3, r3, #2
 80002ca:	6113      	str	r3, [r2, #16]
}
 80002cc:	e03c      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOC)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a23      	ldr	r2, [pc, #140]	; (8000360 <GPIO_PeriClockControl+0x178>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d106      	bne.n	80002e4 <GPIO_PeriClockControl+0xfc>
			GPIOC_PCLK_DI();
 80002d6:	4b20      	ldr	r3, [pc, #128]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002d8:	691b      	ldr	r3, [r3, #16]
 80002da:	4a1f      	ldr	r2, [pc, #124]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002dc:	f043 0304 	orr.w	r3, r3, #4
 80002e0:	6113      	str	r3, [r2, #16]
}
 80002e2:	e031      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOD)
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a1f      	ldr	r2, [pc, #124]	; (8000364 <GPIO_PeriClockControl+0x17c>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d106      	bne.n	80002fa <GPIO_PeriClockControl+0x112>
			GPIOD_PCLK_DI();
 80002ec:	4b1a      	ldr	r3, [pc, #104]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002ee:	691b      	ldr	r3, [r3, #16]
 80002f0:	4a19      	ldr	r2, [pc, #100]	; (8000358 <GPIO_PeriClockControl+0x170>)
 80002f2:	f043 0308 	orr.w	r3, r3, #8
 80002f6:	6113      	str	r3, [r2, #16]
}
 80002f8:	e026      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOE)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a1a      	ldr	r2, [pc, #104]	; (8000368 <GPIO_PeriClockControl+0x180>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0x128>
			GPIOE_PCLK_DI();
 8000302:	4b15      	ldr	r3, [pc, #84]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000304:	691b      	ldr	r3, [r3, #16]
 8000306:	4a14      	ldr	r2, [pc, #80]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000308:	f043 0310 	orr.w	r3, r3, #16
 800030c:	6113      	str	r3, [r2, #16]
}
 800030e:	e01b      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOF)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a16      	ldr	r2, [pc, #88]	; (800036c <GPIO_PeriClockControl+0x184>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d106      	bne.n	8000326 <GPIO_PeriClockControl+0x13e>
			GPIOF_PCLK_DI();
 8000318:	4b0f      	ldr	r3, [pc, #60]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800031a:	691b      	ldr	r3, [r3, #16]
 800031c:	4a0e      	ldr	r2, [pc, #56]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800031e:	f043 0320 	orr.w	r3, r3, #32
 8000322:	6113      	str	r3, [r2, #16]
}
 8000324:	e010      	b.n	8000348 <GPIO_PeriClockControl+0x160>
		}else if(pGPIOx == GPIOG)
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a11      	ldr	r2, [pc, #68]	; (8000370 <GPIO_PeriClockControl+0x188>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0x154>
			GPIOG_PCLK_DI();
 800032e:	4b0a      	ldr	r3, [pc, #40]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000330:	691b      	ldr	r3, [r3, #16]
 8000332:	4a09      	ldr	r2, [pc, #36]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000334:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000338:	6113      	str	r3, [r2, #16]
}
 800033a:	e005      	b.n	8000348 <GPIO_PeriClockControl+0x160>
			GPIOH_PCLK_DI();
 800033c:	4b06      	ldr	r3, [pc, #24]	; (8000358 <GPIO_PeriClockControl+0x170>)
 800033e:	691b      	ldr	r3, [r3, #16]
 8000340:	4a05      	ldr	r2, [pc, #20]	; (8000358 <GPIO_PeriClockControl+0x170>)
 8000342:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000346:	6113      	str	r3, [r2, #16]
}
 8000348:	bf00      	nop
 800034a:	370c      	adds	r7, #12
 800034c:	46bd      	mov	sp, r7
 800034e:	bc80      	pop	{r7}
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
 8000354:	40020000 	.word	0x40020000
 8000358:	40023800 	.word	0x40023800
 800035c:	40020400 	.word	0x40020400
 8000360:	40020800 	.word	0x40020800
 8000364:	40020c00 	.word	0x40020c00
 8000368:	40021000 	.word	0x40021000
 800036c:	40021400 	.word	0x40021400
 8000370:	40021800 	.word	0x40021800

08000374 <GPIO_Init>:
  * @retval 	- none
  *
  * @note		- We define some attribute on struct GPIO_PinConfig_t
  */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000374:	b480      	push	{r7}
 8000376:	b087      	sub	sp, #28
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 800037c:	2300      	movs	r3, #0
 800037e:	617b      	str	r3, [r7, #20]
	uint8_t temp1 = 0;
 8000380:	2300      	movs	r3, #0
 8000382:	74fb      	strb	r3, [r7, #19]
	uint8_t temp2 = 0;
 8000384:	2300      	movs	r3, #0
 8000386:	74bb      	strb	r3, [r7, #18]
	/*1. Configure the mode of GPIO pin*/
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <=GPIO_MODE_ANALOG)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	795b      	ldrb	r3, [r3, #5]
 800038c:	2b03      	cmp	r3, #3
 800038e:	d821      	bhi.n	80003d4 <GPIO_Init+0x60>
	{
		temp = ((pGPIOHandle->GPIO_PinConfig.GPIO_PinMode) << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	795b      	ldrb	r3, [r3, #5]
 8000394:	461a      	mov	r2, r3
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	791b      	ldrb	r3, [r3, #4]
 800039a:	005b      	lsls	r3, r3, #1
 800039c:	fa02 f303 	lsl.w	r3, r2, r3
 80003a0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	681a      	ldr	r2, [r3, #0]
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	791b      	ldrb	r3, [r3, #4]
 80003ac:	4619      	mov	r1, r3
 80003ae:	2303      	movs	r3, #3
 80003b0:	408b      	lsls	r3, r1
 80003b2:	43db      	mvns	r3, r3
 80003b4:	4619      	mov	r1, r3
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	400a      	ands	r2, r1
 80003bc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	6819      	ldr	r1, [r3, #0]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	697a      	ldr	r2, [r7, #20]
 80003ca:	430a      	orrs	r2, r1
 80003cc:	601a      	str	r2, [r3, #0]
		temp = 0;
 80003ce:	2300      	movs	r3, #0
 80003d0:	617b      	str	r3, [r7, #20]
 80003d2:	e0c9      	b.n	8000568 <GPIO_Init+0x1f4>
	}
	else
	{
		/* 1. This part using on interrupt mode*/
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	795b      	ldrb	r3, [r3, #5]
 80003d8:	2b04      	cmp	r3, #4
 80003da:	d117      	bne.n	800040c <GPIO_Init+0x98>
		{
			/*This implement code for Interrupt raising edge*/
			EXTI->FTSR |= (0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003dc:	4b47      	ldr	r3, [pc, #284]	; (80004fc <GPIO_Init+0x188>)
 80003de:	68db      	ldr	r3, [r3, #12]
 80003e0:	687a      	ldr	r2, [r7, #4]
 80003e2:	7912      	ldrb	r2, [r2, #4]
 80003e4:	4611      	mov	r1, r2
 80003e6:	2201      	movs	r2, #1
 80003e8:	408a      	lsls	r2, r1
 80003ea:	4611      	mov	r1, r2
 80003ec:	4a43      	ldr	r2, [pc, #268]	; (80004fc <GPIO_Init+0x188>)
 80003ee:	430b      	orrs	r3, r1
 80003f0:	60d3      	str	r3, [r2, #12]
			/*Clear the responding of RTSR prevent for accident*/
			EXTI->RTSR &= ~(0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f2:	4b42      	ldr	r3, [pc, #264]	; (80004fc <GPIO_Init+0x188>)
 80003f4:	689b      	ldr	r3, [r3, #8]
 80003f6:	687a      	ldr	r2, [r7, #4]
 80003f8:	7912      	ldrb	r2, [r2, #4]
 80003fa:	4611      	mov	r1, r2
 80003fc:	2201      	movs	r2, #1
 80003fe:	408a      	lsls	r2, r1
 8000400:	43d2      	mvns	r2, r2
 8000402:	4611      	mov	r1, r2
 8000404:	4a3d      	ldr	r2, [pc, #244]	; (80004fc <GPIO_Init+0x188>)
 8000406:	400b      	ands	r3, r1
 8000408:	6093      	str	r3, [r2, #8]
 800040a:	e035      	b.n	8000478 <GPIO_Init+0x104>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	795b      	ldrb	r3, [r3, #5]
 8000410:	2b05      	cmp	r3, #5
 8000412:	d117      	bne.n	8000444 <GPIO_Init+0xd0>
		{
			/*This implement code for Interrupt rising edge*/
			EXTI->RTSR |= (0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000414:	4b39      	ldr	r3, [pc, #228]	; (80004fc <GPIO_Init+0x188>)
 8000416:	689b      	ldr	r3, [r3, #8]
 8000418:	687a      	ldr	r2, [r7, #4]
 800041a:	7912      	ldrb	r2, [r2, #4]
 800041c:	4611      	mov	r1, r2
 800041e:	2201      	movs	r2, #1
 8000420:	408a      	lsls	r2, r1
 8000422:	4611      	mov	r1, r2
 8000424:	4a35      	ldr	r2, [pc, #212]	; (80004fc <GPIO_Init+0x188>)
 8000426:	430b      	orrs	r3, r1
 8000428:	6093      	str	r3, [r2, #8]
			/*Clear the responding of FTSR prevent for accident*/
			EXTI->FTSR &= ~(0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042a:	4b34      	ldr	r3, [pc, #208]	; (80004fc <GPIO_Init+0x188>)
 800042c:	68db      	ldr	r3, [r3, #12]
 800042e:	687a      	ldr	r2, [r7, #4]
 8000430:	7912      	ldrb	r2, [r2, #4]
 8000432:	4611      	mov	r1, r2
 8000434:	2201      	movs	r2, #1
 8000436:	408a      	lsls	r2, r1
 8000438:	43d2      	mvns	r2, r2
 800043a:	4611      	mov	r1, r2
 800043c:	4a2f      	ldr	r2, [pc, #188]	; (80004fc <GPIO_Init+0x188>)
 800043e:	400b      	ands	r3, r1
 8000440:	60d3      	str	r3, [r2, #12]
 8000442:	e019      	b.n	8000478 <GPIO_Init+0x104>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RFT)
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	795b      	ldrb	r3, [r3, #5]
 8000448:	2b06      	cmp	r3, #6
 800044a:	d115      	bne.n	8000478 <GPIO_Init+0x104>
		{
			/*This implement code for both Interrupt rising edge and Interrupt falling edge */
			EXTI->RTSR |= (0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800044c:	4b2b      	ldr	r3, [pc, #172]	; (80004fc <GPIO_Init+0x188>)
 800044e:	689b      	ldr	r3, [r3, #8]
 8000450:	687a      	ldr	r2, [r7, #4]
 8000452:	7912      	ldrb	r2, [r2, #4]
 8000454:	4611      	mov	r1, r2
 8000456:	2201      	movs	r2, #1
 8000458:	408a      	lsls	r2, r1
 800045a:	4611      	mov	r1, r2
 800045c:	4a27      	ldr	r2, [pc, #156]	; (80004fc <GPIO_Init+0x188>)
 800045e:	430b      	orrs	r3, r1
 8000460:	6093      	str	r3, [r2, #8]
			/*Clear the responding of FTSR prevent for accident*/
			EXTI->FTSR |= (0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000462:	4b26      	ldr	r3, [pc, #152]	; (80004fc <GPIO_Init+0x188>)
 8000464:	68db      	ldr	r3, [r3, #12]
 8000466:	687a      	ldr	r2, [r7, #4]
 8000468:	7912      	ldrb	r2, [r2, #4]
 800046a:	4611      	mov	r1, r2
 800046c:	2201      	movs	r2, #1
 800046e:	408a      	lsls	r2, r1
 8000470:	4611      	mov	r1, r2
 8000472:	4a22      	ldr	r2, [pc, #136]	; (80004fc <GPIO_Init+0x188>)
 8000474:	430b      	orrs	r3, r1
 8000476:	60d3      	str	r3, [r2, #12]
		{
			/*Error input mode*/
		}

		/*2.Configure the GPIO port selection on SYSCFG_EXT1CR*/
		uint8_t ExtiCrReg = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /4; /*Get EXTI_CR[ExtiCrReg] 1,2,3 or 4*/
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	791b      	ldrb	r3, [r3, #4]
 800047c:	089b      	lsrs	r3, r3, #2
 800047e:	747b      	strb	r3, [r7, #17]
		uint8_t ExticrVal = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4; /*Get EXTI_CR[ExtiCrReg] 1,2,3 or 4*/
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	791b      	ldrb	r3, [r3, #4]
 8000484:	f003 0303 	and.w	r3, r3, #3
 8000488:	743b      	strb	r3, [r7, #16]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	4a1c      	ldr	r2, [pc, #112]	; (8000500 <GPIO_Init+0x18c>)
 8000490:	4293      	cmp	r3, r2
 8000492:	d045      	beq.n	8000520 <GPIO_Init+0x1ac>
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	4a1a      	ldr	r2, [pc, #104]	; (8000504 <GPIO_Init+0x190>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d02b      	beq.n	80004f6 <GPIO_Init+0x182>
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	4a19      	ldr	r2, [pc, #100]	; (8000508 <GPIO_Init+0x194>)
 80004a4:	4293      	cmp	r3, r2
 80004a6:	d024      	beq.n	80004f2 <GPIO_Init+0x17e>
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	4a17      	ldr	r2, [pc, #92]	; (800050c <GPIO_Init+0x198>)
 80004ae:	4293      	cmp	r3, r2
 80004b0:	d01d      	beq.n	80004ee <GPIO_Init+0x17a>
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	4a16      	ldr	r2, [pc, #88]	; (8000510 <GPIO_Init+0x19c>)
 80004b8:	4293      	cmp	r3, r2
 80004ba:	d016      	beq.n	80004ea <GPIO_Init+0x176>
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	4a14      	ldr	r2, [pc, #80]	; (8000514 <GPIO_Init+0x1a0>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d00f      	beq.n	80004e6 <GPIO_Init+0x172>
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	4a13      	ldr	r2, [pc, #76]	; (8000518 <GPIO_Init+0x1a4>)
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d008      	beq.n	80004e2 <GPIO_Init+0x16e>
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a11      	ldr	r2, [pc, #68]	; (800051c <GPIO_Init+0x1a8>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d101      	bne.n	80004de <GPIO_Init+0x16a>
 80004da:	2307      	movs	r3, #7
 80004dc:	e021      	b.n	8000522 <GPIO_Init+0x1ae>
 80004de:	2300      	movs	r3, #0
 80004e0:	e01f      	b.n	8000522 <GPIO_Init+0x1ae>
 80004e2:	2306      	movs	r3, #6
 80004e4:	e01d      	b.n	8000522 <GPIO_Init+0x1ae>
 80004e6:	2305      	movs	r3, #5
 80004e8:	e01b      	b.n	8000522 <GPIO_Init+0x1ae>
 80004ea:	2304      	movs	r3, #4
 80004ec:	e019      	b.n	8000522 <GPIO_Init+0x1ae>
 80004ee:	2303      	movs	r3, #3
 80004f0:	e017      	b.n	8000522 <GPIO_Init+0x1ae>
 80004f2:	2302      	movs	r3, #2
 80004f4:	e015      	b.n	8000522 <GPIO_Init+0x1ae>
 80004f6:	2301      	movs	r3, #1
 80004f8:	e013      	b.n	8000522 <GPIO_Init+0x1ae>
 80004fa:	bf00      	nop
 80004fc:	40013c00 	.word	0x40013c00
 8000500:	40020000 	.word	0x40020000
 8000504:	40020400 	.word	0x40020400
 8000508:	40020800 	.word	0x40020800
 800050c:	40020c00 	.word	0x40020c00
 8000510:	40021000 	.word	0x40021000
 8000514:	40021400 	.word	0x40021400
 8000518:	40021800 	.word	0x40021800
 800051c:	40021c00 	.word	0x40021c00
 8000520:	2300      	movs	r3, #0
 8000522:	73fb      	strb	r3, [r7, #15]
		SYSCFG_PCLK_EN();
 8000524:	4b5d      	ldr	r3, [pc, #372]	; (800069c <GPIO_Init+0x328>)
 8000526:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000528:	4a5c      	ldr	r2, [pc, #368]	; (800069c <GPIO_Init+0x328>)
 800052a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800052e:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->SYSCFG_EXTICR[ExtiCrReg] |= portcode  << (ExticrVal*4);
 8000530:	4a5b      	ldr	r2, [pc, #364]	; (80006a0 <GPIO_Init+0x32c>)
 8000532:	7c7b      	ldrb	r3, [r7, #17]
 8000534:	3302      	adds	r3, #2
 8000536:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800053a:	7bf9      	ldrb	r1, [r7, #15]
 800053c:	7c3b      	ldrb	r3, [r7, #16]
 800053e:	009b      	lsls	r3, r3, #2
 8000540:	fa01 f303 	lsl.w	r3, r1, r3
 8000544:	4618      	mov	r0, r3
 8000546:	4956      	ldr	r1, [pc, #344]	; (80006a0 <GPIO_Init+0x32c>)
 8000548:	7c7b      	ldrb	r3, [r7, #17]
 800054a:	4302      	orrs	r2, r0
 800054c:	3302      	adds	r3, #2
 800054e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		/*3.Enable the EXTI delivery using IMR */
		EXTI->EMR |= (0x01<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000552:	4b54      	ldr	r3, [pc, #336]	; (80006a4 <GPIO_Init+0x330>)
 8000554:	685b      	ldr	r3, [r3, #4]
 8000556:	687a      	ldr	r2, [r7, #4]
 8000558:	7912      	ldrb	r2, [r2, #4]
 800055a:	4611      	mov	r1, r2
 800055c:	2201      	movs	r2, #1
 800055e:	408a      	lsls	r2, r1
 8000560:	4611      	mov	r1, r2
 8000562:	4a50      	ldr	r2, [pc, #320]	; (80006a4 <GPIO_Init+0x330>)
 8000564:	430b      	orrs	r3, r1
 8000566:	6053      	str	r3, [r2, #4]
	}

	/*2. Configure speed */
	temp = ((pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed) << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	799b      	ldrb	r3, [r3, #6]
 800056c:	461a      	mov	r2, r3
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	791b      	ldrb	r3, [r3, #4]
 8000572:	005b      	lsls	r3, r3, #1
 8000574:	fa02 f303 	lsl.w	r3, r2, r3
 8000578:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	689a      	ldr	r2, [r3, #8]
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	791b      	ldrb	r3, [r3, #4]
 8000584:	4619      	mov	r1, r3
 8000586:	2303      	movs	r3, #3
 8000588:	408b      	lsls	r3, r1
 800058a:	43db      	mvns	r3, r3
 800058c:	4619      	mov	r1, r3
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	400a      	ands	r2, r1
 8000594:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	6899      	ldr	r1, [r3, #8]
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	697a      	ldr	r2, [r7, #20]
 80005a2:	430a      	orrs	r2, r1
 80005a4:	609a      	str	r2, [r3, #8]
	temp = 0;
 80005a6:	2300      	movs	r3, #0
 80005a8:	617b      	str	r3, [r7, #20]

	/*3. Configure PU-PD settings */
	temp = ((pGPIOHandle->GPIO_PinConfig.GIPO_PinPuPdControl) << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	79db      	ldrb	r3, [r3, #7]
 80005ae:	461a      	mov	r2, r3
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	791b      	ldrb	r3, [r3, #4]
 80005b4:	005b      	lsls	r3, r3, #1
 80005b6:	fa02 f303 	lsl.w	r3, r2, r3
 80005ba:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	68d9      	ldr	r1, [r3, #12]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	791b      	ldrb	r3, [r3, #4]
 80005c6:	461a      	mov	r2, r3
 80005c8:	2303      	movs	r3, #3
 80005ca:	4093      	lsls	r3, r2
 80005cc:	43da      	mvns	r2, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	400a      	ands	r2, r1
 80005d4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	68d9      	ldr	r1, [r3, #12]
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	697a      	ldr	r2, [r7, #20]
 80005e2:	430a      	orrs	r2, r1
 80005e4:	60da      	str	r2, [r3, #12]
	temp = 0;
 80005e6:	2300      	movs	r3, #0
 80005e8:	617b      	str	r3, [r7, #20]

	/*4. Configure Output type */
	temp = ((pGPIOHandle->GPIO_PinConfig.GPIO_OPType) << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	7a1b      	ldrb	r3, [r3, #8]
 80005ee:	461a      	mov	r2, r3
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	791b      	ldrb	r3, [r3, #4]
 80005f4:	fa02 f303 	lsl.w	r3, r2, r3
 80005f8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01U << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	6859      	ldr	r1, [r3, #4]
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	791b      	ldrb	r3, [r3, #4]
 8000604:	461a      	mov	r2, r3
 8000606:	2301      	movs	r3, #1
 8000608:	4093      	lsls	r3, r2
 800060a:	43da      	mvns	r2, r3
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	400a      	ands	r2, r1
 8000612:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	6859      	ldr	r1, [r3, #4]
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	697a      	ldr	r2, [r7, #20]
 8000620:	430a      	orrs	r2, r1
 8000622:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000624:	2300      	movs	r3, #0
 8000626:	617b      	str	r3, [r7, #20]

	/*5. Configure the alt functionality */
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC)
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	795b      	ldrb	r3, [r3, #5]
 800062c:	2b02      	cmp	r3, #2
 800062e:	d130      	bne.n	8000692 <GPIO_Init+0x31e>
	{
		/*configure the alt function registers*/
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) /8; /*Get register AFR [0] or AFR [1]*/
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	791b      	ldrb	r3, [r3, #4]
 8000634:	08db      	lsrs	r3, r3, #3
 8000636:	74fb      	strb	r3, [r7, #19]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) %8; /*Get position of bit form 0 - 32*/
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	791b      	ldrb	r3, [r3, #4]
 800063c:	f003 0307 	and.w	r3, r3, #7
 8000640:	74bb      	strb	r3, [r7, #18]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0x0FU << (4*temp2));
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	7cfa      	ldrb	r2, [r7, #19]
 8000648:	3208      	adds	r2, #8
 800064a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800064e:	7cbb      	ldrb	r3, [r7, #18]
 8000650:	009b      	lsls	r3, r3, #2
 8000652:	220f      	movs	r2, #15
 8000654:	fa02 f303 	lsl.w	r3, r2, r3
 8000658:	43d9      	mvns	r1, r3
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	7cfa      	ldrb	r2, [r7, #19]
 8000660:	4001      	ands	r1, r0
 8000662:	3208      	adds	r2, #8
 8000664:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode) << (4*temp2);
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	7cfa      	ldrb	r2, [r7, #19]
 800066e:	3208      	adds	r2, #8
 8000670:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	7a5b      	ldrb	r3, [r3, #9]
 8000678:	461a      	mov	r2, r3
 800067a:	7cbb      	ldrb	r3, [r7, #18]
 800067c:	009b      	lsls	r3, r3, #2
 800067e:	fa02 f303 	lsl.w	r3, r2, r3
 8000682:	4618      	mov	r0, r3
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	7cfa      	ldrb	r2, [r7, #19]
 800068a:	4301      	orrs	r1, r0
 800068c:	3208      	adds	r2, #8
 800068e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000692:	bf00      	nop
 8000694:	371c      	adds	r7, #28
 8000696:	46bd      	mov	sp, r7
 8000698:	bc80      	pop	{r7}
 800069a:	4770      	bx	lr
 800069c:	40023800 	.word	0x40023800
 80006a0:	40013800 	.word	0x40013800
 80006a4:	40013c00 	.word	0x40013c00

080006a8 <GPIO_ReadFromInputPin>:
  * @retval 	- 0 or 1
  *
  * @note		- none
  */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006a8:	b480      	push	{r7}
 80006aa:	b085      	sub	sp, #20
 80006ac:	af00      	add	r7, sp, #0
 80006ae:	6078      	str	r0, [r7, #4]
 80006b0:	460b      	mov	r3, r1
 80006b2:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >>  PinNumber) & 0x00000001);
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	691a      	ldr	r2, [r3, #16]
 80006b8:	78fb      	ldrb	r3, [r7, #3]
 80006ba:	fa22 f303 	lsr.w	r3, r2, r3
 80006be:	b2db      	uxtb	r3, r3
 80006c0:	f003 0301 	and.w	r3, r3, #1
 80006c4:	73fb      	strb	r3, [r7, #15]
	return value;
 80006c6:	7bfb      	ldrb	r3, [r7, #15]
}
 80006c8:	4618      	mov	r0, r3
 80006ca:	3714      	adds	r7, #20
 80006cc:	46bd      	mov	sp, r7
 80006ce:	bc80      	pop	{r7}
 80006d0:	4770      	bx	lr

080006d2 <GPIO_ToggleOutputPin>:
  * @retval 	- none
  *
  * @note		- none
  */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006d2:	b480      	push	{r7}
 80006d4:	b083      	sub	sp, #12
 80006d6:	af00      	add	r7, sp, #0
 80006d8:	6078      	str	r0, [r7, #4]
 80006da:	460b      	mov	r3, r1
 80006dc:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1<< PinNumber); 		/* ^ == XOR  */
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	695b      	ldr	r3, [r3, #20]
 80006e2:	78fa      	ldrb	r2, [r7, #3]
 80006e4:	2101      	movs	r1, #1
 80006e6:	fa01 f202 	lsl.w	r2, r1, r2
 80006ea:	405a      	eors	r2, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	615a      	str	r2, [r3, #20]
	/* Other write:  pGPIOx->ODR ^= (1<< PinNumber) 				 */
}
 80006f0:	bf00      	nop
 80006f2:	370c      	adds	r7, #12
 80006f4:	46bd      	mov	sp, r7
 80006f6:	bc80      	pop	{r7}
 80006f8:	4770      	bx	lr
	...

080006fc <main>:
#define BUTTON_PRESS 1
void delay_us(int32_t number);
uint8_t Led_pin[4]  = {GPIO_PIN_NO_12,GPIO_PIN_NO_13,GPIO_PIN_NO_14,GPIO_PIN_NO_15};


int main (void){
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b088      	sub	sp, #32
 8000700:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed, GPIOBtn;
	gpioLed.pGPIOx = GPIOD;
 8000702:	4b20      	ldr	r3, [pc, #128]	; (8000784 <main+0x88>)
 8000704:	613b      	str	r3, [r7, #16]
	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000706:	2101      	movs	r1, #1
 8000708:	481e      	ldr	r0, [pc, #120]	; (8000784 <main+0x88>)
 800070a:	f7ff fd6d 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOA, ENABLE);
 800070e:	2101      	movs	r1, #1
 8000710:	481d      	ldr	r0, [pc, #116]	; (8000788 <main+0x8c>)
 8000712:	f7ff fd69 	bl	80001e8 <GPIO_PeriClockControl>
	/*configuration LED*/
	for(int i = 0; i<4;i++)
 8000716:	2300      	movs	r3, #0
 8000718:	61fb      	str	r3, [r7, #28]
 800071a:	e012      	b.n	8000742 <main+0x46>
	{
		gpioLed.GPIO_PinConfig.GPIO_PinNumber = Led_pin[i];
 800071c:	4a1b      	ldr	r2, [pc, #108]	; (800078c <main+0x90>)
 800071e:	69fb      	ldr	r3, [r7, #28]
 8000720:	4413      	add	r3, r2
 8000722:	781b      	ldrb	r3, [r3, #0]
 8000724:	753b      	strb	r3, [r7, #20]
		gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000726:	2300      	movs	r3, #0
 8000728:	757b      	strb	r3, [r7, #21]
		gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 800072a:	2302      	movs	r3, #2
 800072c:	75bb      	strb	r3, [r7, #22]
		gpioLed.GPIO_PinConfig.GIPO_PinPuPdControl = GPIO_NO_PUPD;
 800072e:	2300      	movs	r3, #0
 8000730:	75fb      	strb	r3, [r7, #23]
		GPIO_Init(&gpioLed);
 8000732:	f107 0310 	add.w	r3, r7, #16
 8000736:	4618      	mov	r0, r3
 8000738:	f7ff fe1c 	bl	8000374 <GPIO_Init>
	for(int i = 0; i<4;i++)
 800073c:	69fb      	ldr	r3, [r7, #28]
 800073e:	3301      	adds	r3, #1
 8000740:	61fb      	str	r3, [r7, #28]
 8000742:	69fb      	ldr	r3, [r7, #28]
 8000744:	2b03      	cmp	r3, #3
 8000746:	dde9      	ble.n	800071c <main+0x20>
	}

	GPIOBtn.pGPIOx = GPIOA;
 8000748:	4b0f      	ldr	r3, [pc, #60]	; (8000788 <main+0x8c>)
 800074a:	607b      	str	r3, [r7, #4]
	/*configuration Button*/
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800074c:	2300      	movs	r3, #0
 800074e:	723b      	strb	r3, [r7, #8]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000750:	2301      	movs	r3, #1
 8000752:	727b      	strb	r3, [r7, #9]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000754:	2302      	movs	r3, #2
 8000756:	72bb      	strb	r3, [r7, #10]
	GPIOBtn.GPIO_PinConfig.GIPO_PinPuPdControl = GPIO_NO_PUPD;
 8000758:	2300      	movs	r3, #0
 800075a:	72fb      	strb	r3, [r7, #11]
	GPIO_Init(&GPIOBtn);
 800075c:	1d3b      	adds	r3, r7, #4
 800075e:	4618      	mov	r0, r3
 8000760:	f7ff fe08 	bl	8000374 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0)== BUTTON_PRESS)
 8000764:	2100      	movs	r1, #0
 8000766:	4808      	ldr	r0, [pc, #32]	; (8000788 <main+0x8c>)
 8000768:	f7ff ff9e 	bl	80006a8 <GPIO_ReadFromInputPin>
 800076c:	4603      	mov	r3, r0
 800076e:	2b01      	cmp	r3, #1
 8000770:	d1f8      	bne.n	8000764 <main+0x68>
		{
			delay_us(10);
 8000772:	200a      	movs	r0, #10
 8000774:	f000 f80c 	bl	8000790 <delay_us>
			GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 8000778:	210c      	movs	r1, #12
 800077a:	4802      	ldr	r0, [pc, #8]	; (8000784 <main+0x88>)
 800077c:	f7ff ffa9 	bl	80006d2 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0)== BUTTON_PRESS)
 8000780:	e7f0      	b.n	8000764 <main+0x68>
 8000782:	bf00      	nop
 8000784:	40020c00 	.word	0x40020c00
 8000788:	40020000 	.word	0x40020000
 800078c:	20000000 	.word	0x20000000

08000790 <delay_us>:
	}
	return 0;
}

void delay_us(int32_t number)
{
 8000790:	b480      	push	{r7}
 8000792:	b085      	sub	sp, #20
 8000794:	af00      	add	r7, sp, #0
 8000796:	6078      	str	r0, [r7, #4]
	for (int i = 0; i<number; i++);
 8000798:	2300      	movs	r3, #0
 800079a:	60fb      	str	r3, [r7, #12]
 800079c:	e002      	b.n	80007a4 <delay_us+0x14>
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	3301      	adds	r3, #1
 80007a2:	60fb      	str	r3, [r7, #12]
 80007a4:	68fa      	ldr	r2, [r7, #12]
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	429a      	cmp	r2, r3
 80007aa:	dbf8      	blt.n	800079e <delay_us+0xe>
}
 80007ac:	bf00      	nop
 80007ae:	bf00      	nop
 80007b0:	3714      	adds	r7, #20
 80007b2:	46bd      	mov	sp, r7
 80007b4:	bc80      	pop	{r7}
 80007b6:	4770      	bx	lr

080007b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007b8:	480d      	ldr	r0, [pc, #52]	; (80007f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007ba:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007c0:	480c      	ldr	r0, [pc, #48]	; (80007f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80007c2:	490d      	ldr	r1, [pc, #52]	; (80007f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007c4:	4a0d      	ldr	r2, [pc, #52]	; (80007fc <LoopForever+0xe>)
  movs r3, #0
 80007c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007c8:	e002      	b.n	80007d0 <LoopCopyDataInit>

080007ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007ce:	3304      	adds	r3, #4

080007d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007d4:	d3f9      	bcc.n	80007ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007d6:	4a0a      	ldr	r2, [pc, #40]	; (8000800 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007d8:	4c0a      	ldr	r4, [pc, #40]	; (8000804 <LoopForever+0x16>)
  movs r3, #0
 80007da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007dc:	e001      	b.n	80007e2 <LoopFillZerobss>

080007de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007e0:	3204      	adds	r2, #4

080007e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007e4:	d3fb      	bcc.n	80007de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007e6:	f000 f811 	bl	800080c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007ea:	f7ff ff87 	bl	80006fc <main>

080007ee <LoopForever>:

LoopForever:
  b LoopForever
 80007ee:	e7fe      	b.n	80007ee <LoopForever>
  ldr   r0, =_estack
 80007f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007f8:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80007fc:	08000874 	.word	0x08000874
  ldr r2, =_sbss
 8000800:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000804:	20000020 	.word	0x20000020

08000808 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000808:	e7fe      	b.n	8000808 <ADC_IRQHandler>
	...

0800080c <__libc_init_array>:
 800080c:	b570      	push	{r4, r5, r6, lr}
 800080e:	4d0d      	ldr	r5, [pc, #52]	; (8000844 <__libc_init_array+0x38>)
 8000810:	4c0d      	ldr	r4, [pc, #52]	; (8000848 <__libc_init_array+0x3c>)
 8000812:	1b64      	subs	r4, r4, r5
 8000814:	10a4      	asrs	r4, r4, #2
 8000816:	2600      	movs	r6, #0
 8000818:	42a6      	cmp	r6, r4
 800081a:	d109      	bne.n	8000830 <__libc_init_array+0x24>
 800081c:	4d0b      	ldr	r5, [pc, #44]	; (800084c <__libc_init_array+0x40>)
 800081e:	4c0c      	ldr	r4, [pc, #48]	; (8000850 <__libc_init_array+0x44>)
 8000820:	f000 f818 	bl	8000854 <_init>
 8000824:	1b64      	subs	r4, r4, r5
 8000826:	10a4      	asrs	r4, r4, #2
 8000828:	2600      	movs	r6, #0
 800082a:	42a6      	cmp	r6, r4
 800082c:	d105      	bne.n	800083a <__libc_init_array+0x2e>
 800082e:	bd70      	pop	{r4, r5, r6, pc}
 8000830:	f855 3b04 	ldr.w	r3, [r5], #4
 8000834:	4798      	blx	r3
 8000836:	3601      	adds	r6, #1
 8000838:	e7ee      	b.n	8000818 <__libc_init_array+0xc>
 800083a:	f855 3b04 	ldr.w	r3, [r5], #4
 800083e:	4798      	blx	r3
 8000840:	3601      	adds	r6, #1
 8000842:	e7f2      	b.n	800082a <__libc_init_array+0x1e>
 8000844:	0800086c 	.word	0x0800086c
 8000848:	0800086c 	.word	0x0800086c
 800084c:	0800086c 	.word	0x0800086c
 8000850:	08000870 	.word	0x08000870

08000854 <_init>:
 8000854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000856:	bf00      	nop
 8000858:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800085a:	bc08      	pop	{r3}
 800085c:	469e      	mov	lr, r3
 800085e:	4770      	bx	lr

08000860 <_fini>:
 8000860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000862:	bf00      	nop
 8000864:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000866:	bc08      	pop	{r3}
 8000868:	469e      	mov	lr, r3
 800086a:	4770      	bx	lr
